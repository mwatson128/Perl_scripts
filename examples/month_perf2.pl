#!/bin/perl
###########################################################################
# month_perf2.pl - Script for month end billing for Ultraswitch. 1.8
# (]$[) month_perf2.pl:1.8 | CDATE=11/29/06 14:44:33
###########################################################################
#
# Perl script to automate the data gathering needed to compile Month end
# Ultraswitch billing.
#
###########################################################################
$zone = `uname -n`;
chomp $zone;
$zone_informixserver = $zone . "_1";
$zone_informixdir = "/informix-" . $zone . "_1";

#$ENV{PATH} = ".:/$zone/usw/offln/bin:/bin:/usr/bin:/usr/.ucbucb:/usr/local/bin:/usr/ucb:/$zone/usw/reports/monthly/bin:/pdl/bin:/home/uswrpt/teTeX/bin/sparc-solaris2.5/";
#$ENV{INFORMIXDIR} = "$zone_informixdir";
#$ENV{ONCONFIG} = "onconfig.$zone_informixserver";
#$ENV{INFORMIXSERVER} = "${zone_informixserver}";
#$ENV{INFORMIXSQLHOSTS} = "${INFORMIXDIR}/etc/sqlhosts.${INFORMIXSERVER}";

$INFORMIXDIR = $ENV{INFORMIXDIR};
$ONCONFIG = $ENV{ONCONFIG};
$INFORMIXSERVER = $ENV{INFORMIXSERVER};
$INFORMIXSQLHOSTS = $ENV{INFORMIXSQLHOSTS};

$REPDIR = "/$zone/usw/reports/monthly";
$PERFDIR = "/$zone/usw/reports/monthly/perf";
$PERFBDIR = "/$zone/usw/reports/monthly/perfb";
$PERF2DIR = "/$zone/usw/reports/monthly/perf2";
$ENV{CWD} = $REPDIR;
$prev_mon = qx(pvmon);
$gds_var = 0;
$MAX_PROCS = 4;

use integer

# Ensure that processing of the previous month has completes before continuing
$ret_val = `billnow`;
if (!$ret_val) { exit 1;  }

# Read in the file.
$CHAINFILE = "< $REPDIR/chains.cfg";
open CHAINFILE or die "$0 can't open configuration file.";
  

while (<CHAINFILE>) {

  # Please skip the comments and blank lines.
  next if /^#|^$/;

  # get rid of newline.
  chomp;
  
  @info  = split /GDS/,$_;
  @all_hrs = split /\s/,$info[0];
  $num_hrs = @all_hrs;

  # Save some effort by not joining chains of one.
  if ($num_hrs > 1) {
    $hrs_list = join '|', @all_hrs;
  }
  else {
    $hrs_list = $all_hrs[0];
  }

  # Save the primary ID for file naming.
  ($char1, $char2) = split / */, $all_hrs[0];
  $char1 .= $char2;
  $hrs_prime = lc $char1;

  $hrs_run{$hrs_prime} = $hrs_list;  

}  
close (CHAINFILE);
 
$OUT1 = "> $REPDIR/perf2_re1.sh";
open OUT1 or die "$0 can't open $OUT1 file.";
$OUT2 = "> $REPDIR/perf2_re2.sh";
open OUT2 or die "$0 can't open $OUT1 file.";
$OUT3 = "> $REPDIR/perf2_re3.sh";
open OUT3 or die "$0 can't open $OUT1 file.";
$OUT4 = "> $REPDIR/perf2_re4.sh";
open OUT4 or die "$0 can't open $OUT1 file.";

$header_info = "#! /bin/sh \
# \
# Monthly perf2 script, generated by month_perf2.pl
# \
  \
. /$zone/usw/reports/monthly/bin/environment \
  \
cd $REPDIR \
  \
";

print OUT1 $header_info;
print OUT2 $header_info;
print OUT3 $header_info;
print OUT4 $header_info;

$hrs_idx = 1;

foreach $hotel_ch ( keys %hrs_run ) {
  
  if ($hrs_idx <= 4) {

    $outfile = "OUT" . $hrs_idx;
    print $outfile "perfa2 -m -h \"$hrs_run{$hotel_ch}\"";
    print $outfile "> perf2\/$hotel_ch$prev_mon.perf 2>\/dev\/null \n";
    $hrs_idx++;
  }
  else {
    
    $hrs_idx = 1;
    $outfile = "OUT" . $hrs_idx;
    print $outfile "perfa2 -m -h \"$hrs_run{$hotel_ch}\"";
    print $outfile "> perf2\/$hotel_ch$prev_mon.perf 2>\/dev\/null \n";
    $hrs_idx++;
  }
}

close (OUT1);
close (OUT2);
close (OUT3);
close (OUT4);

qx(chmod 775 $REPDIR/perf2_re?.sh);
    
# Run the performance reports for ALL
# Put these in a file for later.
qx(perfa2 -m > $PERF2DIR/all$prev_mon.perf);
qx(perfa2 -m -a "MS" > $PERF2DIR/ms$prev_mon.perf);

